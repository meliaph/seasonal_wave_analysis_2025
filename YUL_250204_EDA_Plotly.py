# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K_hzPSkU1Z9bxfKJK_rmPsu4nlCY7Gfs
"""

import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go

# Load data from GitHub
@st.cache_data
def load_data():
    url = "https://raw.githubusercontent.com/meliaph/seasonal_wave_analysis_2025/refs/heads/main/df_analyze_250204.csv"
    df = pd.read_csv(url, parse_dates=['OBS_TIME'])
    df['Month'] = df['OBS_TIME'].dt.month
    df['Year'] = df['OBS_TIME'].dt.year
    return df

df_analyze = load_data()

# Sidebar selections
st.sidebar.header("Options")

# Feature selection
df_features = [col for col in df_analyze.columns if col not in ['OBS_TIME', 'Month', 'Year']]
selected_feature = st.sidebar.selectbox("Select Feature:", df_features)

# Year selection
available_years = sorted(df_analyze['Year'].unique())
selected_years = st.sidebar.multiselect("Select Years:", available_years, default=available_years)

# Filter data
df_filtered = df_analyze[df_analyze['Year'].isin(selected_years)]

# Compute monthly correlation
monthly_corr = df_filtered.groupby('Month').corr()[selected_feature].unstack()
if selected_feature in monthly_corr.columns:
    monthly_corr.drop(columns=selected_feature, inplace=True)

# Display heatmap
st.subheader(f'Monthly Correlation of {selected_feature} with Other Features')
fig_heatmap = px.imshow(
    monthly_corr.T,
    labels={'x': 'Month', 'y': 'Features', 'color': 'Correlation'},
    color_continuous_scale='coolwarm',
    aspect='auto'
)
st.plotly_chart(fig_heatmap)

# Display line plot
st.subheader(f'Trend of {selected_feature} Correlation Over Months')
fig_line = go.Figure()
for col in monthly_corr.columns:
    fig_line.add_trace(go.Scatter(x=monthly_corr.index, y=monthly_corr[col], mode='lines+markers', name=col))

fig_line.update_layout(
    xaxis_title='Month',
    yaxis_title='Correlation',
    xaxis=dict(tickmode='array', tickvals=monthly_corr.index, ticktext=[str(m) for m in monthly_corr.index]),
    legend=dict(x=1.05, y=1, traceorder='normal', bordercolor='Black', borderwidth=1)
)

st.plotly_chart(fig_line)